import{_ as m,f as k,g as v,o as g,c as b,d as s,w as l,a,b as n,e as _,r as t}from"./app.f4e57799.js";const f=a("h1",{id:"modal",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#modal","aria-hidden":"true"},"#"),n(" Modal")],-1),h=a("h2",{id:"usage",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#usage","aria-hidden":"true"},"#"),n(" Usage")],-1),x=_(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal = !modal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Toggle modal
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-button</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-modal</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Foo bar
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-modal</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> modal <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y={href:"https://pinia.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},q=k({__name:"Modal.html",setup(w){const e=v(!1);return(C,o)=>{const c=t("b-button"),i=t("b-modal"),u=t("ExternalLinkIcon"),d=t("ComponentReference"),r=t("ClientOnly");return g(),b("div",null,[f,h,s(c,{onClick:o[0]||(o[0]=p=>e.value=!e.value)},{default:l(()=>[n(" Toggle modal ")]),_:1}),s(i,{modelValue:e.value,"onUpdate:modelValue":o[1]||(o[1]=p=>e.value=p),title:"Hello, World!"},{default:l(()=>[n(" Foobar? ")]),_:1},8,["modelValue"]),x,a("p",null,[n("At this time, there is no built in functionality for toggling a modal in a global state. A simple workaround to be able to modify the state of the modal is to use a global state management tool like "),a("a",y,[n("pinia"),s(u)]),n(". By simply v-modelling to a ref managed by the pinia state you can open and close the modal without context. This is not a perfect solution and will be looked at further in the future.")]),s(r,null,{default:l(()=>[s(d)]),_:1})])}}});var B=m(q,[["__file","Modal.html.vue"]]);export{B as default};
